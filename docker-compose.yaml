---
services:
  gitlab:
    container_name: gitlab
    image: direness/gitlab
    build: 
      context: .
      dockerfile: dockerfiles/gitlab.Dockerfile
    ports:
      - 80:80
      - 443:443
      - 22:22
    secrets:
      - acme_pass
      - acme_config
    environment:
      - DNS_NAME=localhost
      - REDIS_PASSWORD=$REDIS_PASSWORD
      - ACME_PASSWORD=/run/secrets/acme_pass
      - ACME_CONFIG=/run/secrets/acme_config
      - CERT_SANS=gitlab.vpn.test,www.gitlab.vpn.test,localhost
    volumes:
      - ./config/:/etc/gitlab
      - ./logs/:/var/log/gitlab
      - ./data/:/var/opt/gitlab
    networks:
      - fronted
      - backend
    healthcheck:
      test: ["CMD-SHELL", "curl --cacert /root/.step/certs/root_ca.crt https://gitlab/users/sign_in"]
      interval: 2m
      timeout: 5s
      retries: 5
      start_period: 2m
      start_interval: 30s
    depends_on:
      - acme
      - redis
    restart: unless-stopped

  acme:
    container_name: git-acme
    image: smallstep/step-ca:0.28.1
    secrets:
      - acme_pass
    environment:
      - DOCKER_STEPCA_INIT_NAME=acme
      - DOCKER_STEPCA_INIT_DNS_NAMES=localhost,acme
      - DOCKER_STEPCA_INIT_PROVISIONER_NAME=acme
      - DOCKER_STEPCA_INIT_REMOTE_MANAGEMENT=true
      - DOCKER_STEPCA_INIT_PASSWORD_FILE=/run/secrets/acme_pass
    volumes:
      - ./step:/home/step
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "step ca health"]
      interval: 1m30s
      timeout: 3s
      retries: 5
      start_period: 1s
    restart: unless-stopped

  redis:
    container_name: git-redis
    image: direness/redis
    build:
      context: .
      dockerfile: dockerfiles/redis.Dockerfile
    command: ["/opt/redis-stack/bin/redis-server", "/etc/redis/redis.conf", "--requirepass $REDIS_PASSWORD"]
    deploy:
      resources:
        limits:
          memory: 2gb
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 1m
      timeout: 3s
      retries: 5
    networks:
      - backend
    restart: unless-stopped

networks:
  fronted:
  backend:

secrets:
  acme_pass:
    file: ./resources/password
  acme_config:
    file: ./step/config/defaults.json